name: Step 0, Start

# This step triggers after the learner creates a new repository from the template
# This step sets STEP to 1
# This step closes <details id=0> and opens <details id=1>

# This will run every time we create push a commit to `main`
# Reference https://docs.github.com/en/actions/learn-github-actions/events-that-trigger-workflows
on:
  workflow_dispatch:
#  push:
#    branches:
#      - main 

# Reference https://docs.github.com/en/actions/security-guides/automatic-token-authentication
permissions:
  # Need `contents: read` to checkout the repository  /저장소를 체크아웃하려면 content : read 가 필요합니다. 
  # Need `contents: write` to update the step metadata  /마타데이터를 업데이트하려면 contents: write가 필요합니다. 
  # Need `pull-requests: write` to create a pull request /pull request를 만드려면 pull-request: write 권한이 필요합니다.
  contents: write
  pull-requests: write

jobs:
  on_start:
    name: On start

    # We will only run this action when:  다음과 같은 경우만 작업을 실행합니다.
    # 1. This repository isn't the template repository  이 리포지토리는 템플릿 리포지토리가 아닙니다.
    # Reference https://docs.github.com/en/actions/learn-github-actions/contexts
    # Reference https://docs.github.com/en/actions/learn-github-actions/expressions
    if: ${{ !github.event.repository.is_template }}

    # We'll run Ubuntu for performance instead of Mac or Windows  우리는 맥이나 윈도우 대신 성능을 위해 ubuntu를 사용할 것입니다
    runs-on: ubuntu-latest

    steps:
      # We'll need to check out the repository so that we can edit the README  /README 파일을 편집할 수 있도록 저장소를 체크아웃해야 합니다.
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Let's get all the branches  /모든 branches 를 가지고 옵니다 (모든 commit를 자기고 온다는 뜻 같음)

      # Make a branch, file, commit, and pull request for the learner /학습자를 위한 분기, 파일, 커및 끌어오기 요청 만들기  
      - name: Prepare a pull request, branch, and file
        run: |   # script 파일을 짜겠다..
          echo "Make sure we are on step 0"
          if [ "$(cat .github/script/STEP)" != 0 ]     # 만약 .github/script/STEP 파일의 내용이 0이 아니라면 exit 0 나가겠다 하지만 아니라면 아래 있는 script를 실행한다.
          then
            echo "Current step is not 0"
            exit 0
          fi

          echo "Make a branch"
          BRANCH=welcome-workflow  # 변수 지정
          git checkout -b $BRANCH   # welcome-workflow 브랜치 만들고 -b 로 채크아웃
          
          
          # git config --global 옵션 같은 것이 없으면 그냥 local 옵션이다. 
          # 지역 local은 특정 저장소로 한정이 되고 
          # 전역 global은 현재 사용자의 모든 저장소를 포함시킵니다
          # system은 해당 컴퓨터의 모든 저장소와 사용자를 걸쳐서 적용됩니다. 
          
          echo "Make a commit"   
          git config user.name github-actions      # 사용자 이름 설정 config
          git config user.email github-actions@github.com  # 사용자 email 설정 config
          git commit --allow-empty --message="Create an empty commit"   #  터미널에서 메시지가 없는 빈 커밋을 작성하려면 --allow-empty-message 옵션을 사용합니다.

           
           
          echo "Push"
          git push --set-upstream origin $BRANCH    # 원격 서버의 welcome-workflow의 추가합니다.

          echo "Make a pull request"
          # Reference https://cli.github.com/manual/gh_pr_create
          gh pr create --title "Post welcome comment workflow" --body "Post welcome comment workflow"  
          
          # gh pr은 github에서 pull request를 만드는 작업입니다.
          # --title 풀 요청 제목
          # --body 풀 리퀘스트의 body
          
          echo "Restore main"
          git checkout main
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}

      # Update README to close <details id=0> and open <details id=1>   추가 정보를 업데이트하며 <detail id=0>을 닫고 <세부 정보 ID =1> 을 엽니다
      # and set STEP to '1'
      - name: Update to step 1
        uses: skills/action-update-step@v1   # STEP 파일의 내용을 변경합니다.
        with: 
          token: ${{ secrets.TOKEN }}
          from_step: 0
          to_step: 1
          branch_name: welcome-workflow

# 
#
